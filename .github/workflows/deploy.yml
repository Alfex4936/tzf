# Copy&paste from https://github.com/ultrajson/ultrajson/blob/main/.github/workflows/deploy.yml
name: deploy

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - ".github/workflows/deploy.yml"
  release:
    types:
      - published
  workflow_dispatch:

env:
  FORCE_COLOR: 1

jobs:
  build-linux-wheel:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: build so
        run: |
          cd python;make build

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          cache: pip
          cache-dependency-path: ".github/workflows/deploy.yml"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel twine

      - name: Build wheels
        run: cd python;python setup.py bdist_wheel --plat-name=manylinux1_x86_64

      - name: Upload as build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: tzfpy-dist
          path: python/dist/*.whl

  build-macos-wheel:
    runs-on: "macos-11"
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: build so
        run: |
          cd python;make build

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          cache: pip
          cache-dependency-path: ".github/workflows/deploy.yml"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel twine

      - name: Build wheels
        run: cd python;python setup.py bdist_wheel --plat-name=macosx-11-x86_64

      - name: Upload as build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: tzfpy-dist
          path: python/dist/*.whl

  publish:
    needs: [build-linux-wheel, build-macos-wheel]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get tag
        id: tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
      - name: Download distribution artifact
        uses: actions/download-artifact@master
        with:
          name: tzfpy-dist
          path: python/dist

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          cache: pip
          cache-dependency-path: ".github/workflows/deploy.yml"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel twine

      - name: Publish package to PyPI
        if: github.event.action == 'published'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: twine upload --skip-existing python/dist/*.whl

      - name: Publish package to TestPyPI
        if: |
          github.repository == 'ringsaturn/tzf' &&
          github.ref == 'refs/heads/main'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          twine upload --repository-url https://test.pypi.org/legacy/ --skip-existing python/dist/*.whl
